name: build branch

on: [push, pull_request]

jobs:

  test:
    runs-on: ubuntu-latest
    name: Check branch
    steps:
    - uses: actions/checkout@v2

    # Install Node 12
    - uses: actions/setup-node@v1
      with:
        node-version: 12

    # Cache node modules
    - uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    # Install environment
    - run: npm config set spin false
    - run: npm install -g npm@7
    - run: npm install -g codecov
    - run: npm --version

    # Install Dependencies
    - run: npm ci

    # Run tests
    - run: npm run lint:js
    - run: npm run lint:hbs
    - run: npm test
    - run: codecov --file=coverage/node/lcov.info
    - run: codecov --file=coverage/ember/lcov.info

  regression:
    needs: test
    runs-on: ubuntu-latest
    name: Check ember-try for [${{matrix.scenario}}]
    strategy:
      matrix:
        scenario: [ember-lts-2.18, ember-lts-3.4, ember-release, ember-beta, ember-default-with-jquery]
    steps:
    - uses: actions/checkout@v2

    # Install Node 12
    - uses: actions/setup-node@v1
      with:
        node-version: 12

    # Install environment
    - run: npm config set spin false
    - run: npm install -g npm@7
    - run: npm --version

    # Install Dependencies
    - run: npm ci

    # Run ember-try
    - run: node_modules/.bin/ember  try:one ${{matrix.scenario}}
